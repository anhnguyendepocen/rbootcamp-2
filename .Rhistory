mutate(pct_lease = round(n / sum(n), 2)) %>%
filter(CarOwnership == "Lease") %>% ungroup() %>%
top_n(-5, wt = pct_lease)
customer %>%
group_by(Age) %>%
count(CarOwnership) %>%
mutate(pct_lease = round(n / sum(n), 2)) %>%
filter(CarOwnership == "Lease") %>% ungroup() %>%
top_n(10, wt = pct_lease)
customer %>%
group_by(Age) %>%
count(CarOwnership) %>%
mutate(pct_lease = round(n / sum(n), 2)) %>%
filter(CarOwnership == "Lease") %>% arrange(desc(pct_lease))
customer %>%
count(age, CarOwnership) %>%
mutate(pct_lease = round(n / sum(n), 2)) %>%
filter(CarOwnership == "Lease") %>% arrange(desc(pct_lease))
customer %>%
count(age, CarOwnership)
customer %>%
count(Age, CarOwnership) %>%
mutate(pct_lease = round(n / sum(n), 2)) %>%
filter(CarOwnership == "Lease") %>% arrange(desc(pct_lease))
customer %>%
count(Age, CarOwnership) %>%
mutate(pct_lease = round(n / sum(n), 2)) %>%
filter(CarOwnership == "Lease") %>% arrange(pct_lease)
customer %>%
group_by(Age) %>%
summarize(avg_value = mean(CarValue)) %>%
top_n(5)
customer %>%
group_by(Age) %>%
summarize(avg_value = mean(CarValue))
customer %>%
group_by(Age) %>%
summarize(avg_value = mean(CarValue)) %>%
top_n(5)
customer %>%
group_by(Age) %>%
summarize(avg_value = mean(CarValue)) %>%
top_n(25)
customer %>%
group_by(Age) %>%
summarize(avg_value = mean(CarValue)) %>%
top_n(5)
customer %>%
group_by(Age) %>%
summarize(avg_value = mean(CarValue)) %>%
top_n(25, wt = avg_value)
customer %>%
group_by(Age) %>%
summarize(avg_value = mean(CarValue)) %>%
top_n(5, wt = avg_value)
customer %>%
group_by(Age) %>%
summarize(avg_value = mean(CarValue)) %>%
top_n(5, wt = -avg_value)
customer %>%
group_by(Age) %>%
summarize(avg_value = mean(CarValue)) %>%
top_n(5, wt = avg_value)
customers %>%
count(CreditCard, LoanDefault) %>%
mutate(rate = round(n / sum(n), 2)) %>% filter(LoanDefault == "Yes") %>% arrange(desc(rate))
customer %>%
count(CreditCard, LoanDefault) %>%
mutate(rate = round(n / sum(n), 2)) %>% filter(LoanDefault == "Yes") %>% arrange(desc(rate))
devtools::install_github("bradelyboehmke/rbootcamp")
devtools::install_github("bradleyboehmke/rbootcamp")
rbootcamp::get_tutorial("EDA")
devtools::install_github("bradleyboehmke/rbootcamp")
rbootcamp::get_tutorial("EDA")
?rbootcamp::customer
rbootcamp::customer
devtools::install_github("bradleyboehmke/rbootcamp")
rbootcamp::get_tutorial("EDA")
df <- customer %>%
group_by(JobCategory) %>%
summarize(income_sd = sd(HHIncome))
library(rbootcamp)
df <- customer %>%
group_by(JobCategory) %>%
summarize(income_sd = sd(HHIncome))
ggplot(df, aes(x = JobCategory, y = income_sd)) + geom_col()
ggplot(data = df, aes(x = JobCategory, y =  income_sd)) +
geom_col()
df <- customer %>%
group_by(JobCategory) %>%
summarize(avg_HHIncome = mean(HHIncome))
ggplot(data = df, aes(x = JobCategory, y =  avg_HHIncome)) +
geom_col()
ggplot(data = df, aes(x = reorder(JobCategory, avg_HHIncome), y =  avg_HHIncome)) +
geom_col()
ggplot(data = df, aes(x = reorder(JobCategory, -avg_HHIncome), y =  avg_HHIncome)) +
geom_col()
ggplot(data = customer, aes(x = JobCategory)) +
geom_bar()
ggplot(data = customer, aes(x = JobCategory)) +
geom_bar()
ggplot(data = customer, aes(x = reorder(JobCategory))) +
geom_bar()
?reorder
ggplot(data = customer, aes(x = reorder(JobCategory, FUN = mean))) +
geom_bar()
ggplot(data = customer, aes(x = reorder(JobCategory, JobCateogry, FUN = mean))) +
geom_bar()
ggplot(data = customer, aes(x = reorder(JobCategory, JobCategory, FUN = mean))) +
geom_bar()
ggplot(data = customer, aes(x = reorder(JobCategory, JobCategory, FUN = sum))) +
geom_bar()
ggplot(data = customer, aes(x = reorder(JobCategory, JobCategory, FUN = max))) +
geom_bar()
ggplot(data = customer, aes(x = JobCategory)) +
geom_bar()
ggplot(data = customer, aes(x = JobCategory)) +
geom_bar() +
facet_wrap(~ Region)
ggplot(data = customer, aes(x = HHIncome)) +
geom_bar() +
facet_wrap(~ JobCategory)
ggplot(data = customer, aes(x = HHIncome)) +
geom_bar() +
facet_wrap(~ Region)
ggplot(data = customer, aes(x = HHIncome)) +
geom_bar() +
facet_wrap(~ Gender)
ggplot(data = customer, aes(x = HHIncome)) +
geom_bar() +
facet_wrap(~ Gender) +
scale_x_log10()
customer <- na.omit(customer)
ggplot(data = customer, aes(x = HHIncome)) +
geom_bar() +
facet_wrap(~ Gender) +
scale_x_log10()
ggplot(data = customer, aes(x = HHIncome)) +
geom_histogram() +
facet_wrap(~ Gender) +
scale_x_log10()
ggplot(data = customer, aes(x = HHIncome)) +
geom_histogram() +
facet_wrap(~ Gender)
customer %>%
count(MaritalStatus) %>%
mutate(pct = n / sum(n))
customer %>%
count(MaritalStatus) %>%
mutate(pct = n / sum(n)) %>%
ggplot(aes(x = MaritalStatus, y = pct)) +
geom_col()
customer %>%
count(MaritalStatus) %>%
mutate(pct = n / sum(n)) %>%
ggplot(aes(x = MaritalStatus, y = pct)) +
geom_col() +
scale_y_continuous(labels = scales::percent)
names(customer)[1:10]
ggplot(customer, aes(x = EducationYears, fill = MaritalStatus)) +
geom_density()
ggplot(customer, aes(x = EducationYears, fill = MaritalStatus)) +
geom_density(alpha = .5)
ggplot(customer, aes(x = EducationYears, fill = MaritalStatus)) +
geom_density(alpha = .25)
ggplot(customer, aes(x = EducationYears, fill = MaritalStatus)) +
geom_density(alpha = .35)
ggplot(customer, aes(x = EducationYears, fill = MaritalStatus)) +
geom_density(alpha = .35)
ggplot(customer, aes(x = EducationYears, fill = MaritalStatus)) +
geom_density(alpha = .35)
ggplot(customer, aes(x = EducationYears, fill = MaritalStatus)) +
geom_density(alpha = .35)
ggplot(customer, aes(x = EducationYears, fill = MaritalStatus)) +
geom_density(alpha = .5)
names(customer)[1:15]
names(customer)[1:20]
names(customer)[1:30]
names(customer)
ggplot(customer, aes(x = HHIncome, y = CardSpendMonth)) +
geom_point()
ggplot(customer, aes(x = HHIncome, y = CardSpendMonth)) +
geom_point() + scale_x_log10() + scale_y_log10()
ggplot(customer, aes(x = HHIncome, y = CreditDebt)) +
geom_point() + scale_x_log10() + scale_y_log10()
ggplot(customer, aes(x = HHIncome, y = DebtRatio)) +
geom_point() + scale_x_log10() + scale_y_log10()
names(customer)
ggplot(customer, aes(x = HHIncome, y = DebtToIncomeRatio)) +
geom_point() + scale_x_log10() + scale_y_log10()
ggplot(customer, aes(x = HHIncome, y = CreditDebt)) +
geom_point() + scale_x_log10() + scale_y_log10()
ggplot(customer, aes(x = HHIncome, y = CardDebt)) +
geom_point()
ggplot(customer, aes(x = HHIncome, y = CreditDebt)) +
geom_point()
ggplot(customer, aes(x = HHIncome, y = CreditDebt)) +
geom_point() +
scale_x_log10() +
scale_y_log10()
ggplot(customer, aes(x = HHIncome, y = CreditDebt)) +
geom_point() +
scale_x_log10() +
scale_y_log10() + geom_smooth()
head(customer)
head(customer[c(1:4, 13)])
ggplot(customer, aes(x = HHIncome, y = CreditDebt)) +
geom_point() +
scale_x_log10("Household Income", labels = scales::dollar) +
scale_y_log10("Credit to Income Ratio", lables = scales::percent) +
geom_smooth(method = "lm")
ggplot(customer, aes(x = HHIncome, y = CreditDebt)) +
geom_point() +
scale_x_log10("Household Income", labels = scales::dollar)
ggplot(customer, aes(x = HHIncome, y = CreditDebt)) +
geom_point() +
scale_x_log10("Household Income", labels = scales::dollar) +
scale_y_log10("Credit to Income Ratio", lables = scales::percent)
ggplot(customer, aes(x = HHIncome, y = CreditDebt)) +
geom_point() +
scale_x_log10("Household Income", labels = scales::dollar) +
scale_y_log10("Credit to Income Ratio")
ggplot(customer, aes(x = HHIncome, y = CreditDebt)) +
geom_point() +
scale_x_log10("Household Income", labels = scales::dollar) +
scale_y_log10("Credit to Income Ratio", lables = scales::comma)
ggplot(customer, aes(x = HHIncome, y = CreditDebt)) +
geom_point() +
scale_x_log10("Household Income", labels = scales::dollar) +
scale_y_log10("Credit to Income Ratio", lables = scales::percent)
ggplot(customer, aes(x = HHIncome, y = CreditDebt)) +
geom_point() +
scale_x_log10("Household Income", labels = scales::dollar) +
scale_y_log10("Credit to Income Ratio")
1e-02
1e+02
ggplot(customer, aes(x = HHIncome, y = CreditDebt)) +
geom_point() +
scale_x_log10("Household Income", labels = scales::dollar) +
scale_y_log10("Credit to Income Ratio", lables = scales::log10_trans) +
geom_smooth(method = "lm")
ggplot(customer, aes(x = HHIncome, y = CreditDebt)) +
geom_point() +
scale_x_log10("Household Income", labels = scales::dollar) +
scale_y_log10("Credit to Income Ratio") +
geom_smooth(method = "lm")
ggplot(customer, aes(x = HHIncome, y = CreditDebt)) +
geom_point() +
scale_x_log10("Household Income", labels = scales::dollar)
ggplot(customer, aes(x = HHIncome, y = CreditDebt)) +
geom_point() +
scale_x_log10() +
scale_y_log10()
ggplot(customer, aes(x = HHIncome, y = CreditDebt)) +
geom_point() +
scale_x_log10() +
scale_y_log10() +
geom_smooth(method = "lm")
ggplot(customer, aes(x = HHIncome, y = CreditDebt)) +
geom_point() +
scale_x_log10() +
scale_y_log10() +
geom_smooth(method = "lm") + facet_wrap(~ Retired)
ggplot(customer, aes(x = HHIncome, y = CreditDebt)) +
geom_point() +
scale_x_log10() +
scale_y_log10() +
geom_smooth(method = "lm") + facet_wrap(~ JobCategory)
ggplot(customer, aes(x = HHIncome, y = CreditDebt)) +
geom_point() +
scale_x_log10() +
scale_y_log10() +
geom_smooth(method = "lm") + facet_wrap(~ MaritalStatus)
ggplot(customer, aes(x = HHIncome, y = CreditDebt)) +
geom_point() +
scale_x_log10() +
scale_y_log10() +
geom_smooth(method = "lm") + facet_wrap(~ Gender)
head(customer)
ggplot(customer, aes(x = HHIncome, y = CreditDebt)) +
geom_point() +
scale_x_log10() +
scale_y_log10() +
geom_smooth(method = "lm") + facet_wrap(~ Region)
ggplot(customer, aes(x = HHIncome, y = CreditDebt)) +
geom_point() +
scale_x_log10() +
scale_y_log10() +
geom_smooth(method = "lm") + facet_wrap(~ CarOwnership)
ggplot(customer, aes(x = HHIncome, y = CreditDebt)) +
geom_point() +
scale_x_log10() +
scale_y_log10() +
geom_smooth(method = "lm") + facet_wrap(~ HouseholdSize)
ggplot(customer, aes(x = HHIncome, y = CreditDebt)) +
geom_point() +
scale_x_log10() +
scale_y_log10() +
geom_smooth(method = "lm") + facet_wrap(~ LoanDefault)
ggplot(customer, aes(x = HHIncome, y = CreditDebt)) +
geom_point() +
scale_x_log10() +
scale_y_log10() +
geom_smooth(method = "lm") + facet_wrap(~ CreditCard)
ggplot(customer, aes(x = HHIncome, y = CreditDebt)) +
geom_point() +
scale_x_log10() +
scale_y_log10() +
geom_smooth(method = "lm") + facet_grid(Gender ~ CreditCard)
ggplot(customer, aes(x = HHIncome, y = CreditDebt)) +
geom_point() +
scale_x_log10() +
scale_y_log10() +
geom_smooth(method = "lm") + facet_grid(Gender ~ CreditDefault)
ggplot(customer, aes(x = HHIncome, y = CreditDebt)) +
geom_point() +
scale_x_log10() +
scale_y_log10() +
geom_smooth(method = "lm") + facet_grid(Gender ~ LoanDefault)
ggplot(customer, aes(x = HHIncome, y = CreditDebt)) +
geom_point() +
scale_x_log10() +
scale_y_log10() +
geom_smooth(method = "lm") + facet_grid(Gender ~ LoanDefault) + geom_hline(yintercept = mean(CreditDebt))
ggplot(customer, aes(x = HHIncome, y = CreditDebt)) +
geom_point() +
scale_x_log10() +
scale_y_log10() +
geom_smooth(method = "lm") + facet_grid(Gender ~ LoanDefault) + geom_hline(yintercept = mean(customer$CreditDebt))
ggplot(customer, aes(x = HHIncome, y = CreditDebt)) +
geom_point() +
scale_x_log10() +
scale_y_log10() +
geom_smooth(method = "lm") + facet_grid(Gender ~ LoanDefault) + geom_hline(yintercept = mean(customer$CreditDebt), color = "white")
ggplot(customer, aes(x = HHIncome, y = CreditDebt)) +
geom_point() +
scale_x_log10() +
scale_y_log10() +
geom_smooth(method = "lm") + facet_grid(Gender ~ LoanDefault) + geom_vline(xintercept = mean(customer$HHIncome), color = "white")
ggplot(customer, aes(x = HHIncome, y = CreditDebt)) +
geom_point() +
scale_x_log10() +
scale_y_log10() +
geom_smooth(method = "lm") + facet_grid(Gender ~ LoanDefault) + geom_vline(xintercept = mean(customer$HHIncome), color = "red") + geom_hline(yintercept = mean(customer$CreditDebt), color = "red")
ggplot(customer, aes(x = HHIncome, y = CreditDebt)) +
geom_point() +
scale_x_log10() +
scale_y_log10() +
geom_smooth(method = "lm") + facet_wrap(~ LoanDefault) + geom_vline(xintercept = mean(customer$HHIncome), color = "white")
ggplot(customer, aes(x = HHIncome, y = CreditDebt)) +
geom_point() +
scale_x_log10() +
scale_y_log10() +
geom_smooth(method = "lm") + facet_wrap(~ LoanDefault) + geom_vline(xintercept = mean(customer$HHIncome), color = "red") + geom_hline(yintercept = mean(customer$CreditDebt), color = "red")
View(customer)
ggplot(customer, aes(x = HHIncome, y = CreditDebt, color = LoanDefault)) +
geom_point() +
scale_x_log10() +
scale_y_log10() +
geom_smooth(method = "lm")
ggplot(customer, aes(x = HHIncome, y = CreditDebt, color = LoanDefault)) +
geom_point(alpha = .25) +
scale_x_log10() +
scale_y_log10() +
geom_smooth(method = "lm")
ggplot(customer, aes(x = HHIncome, y = CreditDebt, color = LoanDefault)) +
geom_point(alpha = .25) +
scale_x_log10() +
scale_y_log10() +
geom_smooth(method = "lm")
ggplot(customer, aes(x = HHIncome, y = CreditDebt, color = LoanDefault)) +
geom_point(alpha = .10) +
scale_x_log10() +
scale_y_log10() +
geom_smooth(method = "lm")
devtools::document()
customer <- na.omit(customer)
customer <- na.omit(rbootcamp::customer)
ggplot(customer, aes(x = HHIncome, y = CreditDebt, color = LoanDefault)) +
geom_point(alpha = .10) +
scale_x_log10() +
scale_y_log10() +
geom_smooth(method = "lm")
library(tidyverse)
ggplot(customer, aes(x = HHIncome, y = CreditDebt, color = LoanDefault)) +
geom_point(alpha = .10) +
scale_x_log10() +
scale_y_log10() +
geom_smooth(method = "lm")
mean(customer$CreditDebt)
t.test(customer$CreditDebt, mu = 1.75, alternative = "less")
t.test(customer$CreditDebt, mu = 1.5, alternative = "less")
t.test(customer$CreditDebt, mu = 1.5, alternative = "greater")
t.test(customer$CreditDebt, mu = 1.75, alternative = "greater")
t.test(log10(customer$CreditDebt), mu = log10(1.75), alternative = "greater")
log1p(customer$CreditDebt)
t.test(log1p(customer$CreditDebt), mu = log1p(1.75), alternative = "greater")
t.test(log1p(customer$CreditDebt), mu = log1p(1.5), alternative = "greater")
log1p(1)
log1p(1.5)
log1p(customer$CreditDebt) %>% mean()
log10(customer$CreditDebt) %>% mean()
hist(CreditDebt)
hist(customer$CreditDebt)
min(customer$CreditDebt)
?log1p
hist(customer$HHIncome)
log10(customer$CreditDebt) %>% mean()
filter(customer, CreditDebt > 0)
filter(customer, CreditDebt > 0) %>% summarize(t.test(log10(CreditDebt), mu = log10(1.5), alternative = "greater"))
t.test(customer$CreditDebt, mu = 1.5, alternative = "less")
t.test(customer$CreditDebt, mu = 1.5)
?t.test
df <- customer %>% filter(CreditDebt > 0)
t.test(log10(df$CreditDebt), mu = log10(1.5), alternative = "greater")
t.test(log10(df$CreditDebt), mu = log10(1.4), alternative = "greater")
t.test(log10(df$CreditDebt), mu = log10(1.3), alternative = "greater")
t.test(log10(df$CreditDebt), mu = log10(1.2), alternative = "greater")
t.test(log10(df$CreditDebt), mu = log10(1.15), alternative = "greater")
t.test(log10(df$CreditDebt), mu = log10(1.05), alternative = "greater")
ggplot(df, aes(CreditDebt)) + geom_histogram() + scale_x_log10()
ggplot(df, aes(CreditDebt)) + geom_histogram() + scale_x_log10(labels = scales::percent)
wilcox.test(customer$CreditDebt, mu = 1.5)
wilcox.test(log10(df$CreditDebt), mu = log10(1.05), alternative = "greater")
ggplot(customer, aes(x = CreditDebt)) +
geom_histogram()
shapiro.test(customer$CreditDebt)
p1 <- ggplot(customer, aes(x = CreditDebt)) +
geom_histogram() +
ggtitle("Credit Debt Distribution")
p2 <- ggplot(customer, aes(x = CreditDebt)) +
geom_histogram() +
scale_x_log10() +
ggtitle("Log-transformed Distribution")
gridExtra::grid.arrange(p1, p2)
p1 <- ggplot(customer, aes(x = CreditDebt)) +
geom_histogram() +
ggtitle("Credit Debt Distribution")
p2 <- ggplot(customer, aes(x = CreditDebt)) +
geom_histogram() +
scale_x_log10() +
ggtitle("Log-transformed Distribution")
gridExtra::grid.arrange(p1, p2, nrow = 1)
wilcox.test(customer$CreditDebt, mu = 1.5, alternative = "greater")
mean(customer$HHIncome)
wilcox.test(customer$HHIncome, mu = 45000, alternative = "greater")
wilcox.test(customer$HHIncome, mu = 45000)
t.test(customer$HHIncome, mu = 50000)
t.test(customer$HHIncome, mu = 51000)
mean(customer$HHIncome)
shapiro.test(customer$HHIncome)
t.test(CreditDebt ~ LoanDefault, data = customer)
wilcox.test(CreditDebt ~ LoanDefault, data = customer)
anova <- aov(CreditDebt ~ Region, data = customer)
summary(anova)
anova <- aov(CreditDebt ~ Region, data = JobCategories)
summary(anova)
anova <- aov(CreditDebt ~ Region, data = Gender)
summary(anova)
anova <- aov(CreditDebt ~ Region, data = LoanDefault)
summary(anova)
anova <- aov(CreditDebt ~ LoanDefault, data = customer)
summary(anova)
anova <- aov(CreditDebt ~ JobCategory, data = customer)
summary(anova)
TukeyHSD(anova)
diff <- TukeyHSD(anova)
plot(diff)
plot(diff, las = 1)
par(mar=c(8,8,1,1))
plot(diff, las = 1)
par(mar=c(1,1,3,1))
plot(diff, las = 1)
par(mar=c(1,10,1,1))
plot(diff, las = 1)
par(mar=c(5,10,3,1))
plot(diff, las = 1)
anova <- aov(CreditDebt ~ Region, data = customer)
summary(anova)
ggplot(customer, aes(x = HHIncome, y = CreditDebt, color = LoanDefault)) +
geom_point(alpha = .10) +
scale_x_log10() +
scale_y_log10() +
geom_smooth(method = "lm")
cor(customer$HHIncome, customer$CreditDebt)
?cor
cor(log10(customer$HHIncome), log10(customer$CreditDebt))
cor.test(customer$HHIncome, customer$CreditDebt)
head(custoer)
head(customer)
cor.test(customer$HHIncome, customer$CardSpendMonth)
cor(customer$HHIncome, customer$CreditDebt, method = "spearman")
cor(customer$HHIncome, customer$CreditDebt, method = "kendall")
cor.test(customer$HHIncome, customer$CreditDebt, method = "spearman")
cor.test(customer$HHIncome, customer$CardSpendMonth, method = "spearman")
diamonds %>%
summarize(r = cor(HHIncome, CreditDebt, method = "spearman"),
p_value = cor.test(HHIncome, CreditDebt, method = "spearman")$p.value)
customer %>%
summarize(r = cor(HHIncome, CreditDebt, method = "spearman"),
p_value = cor.test(HHIncome, CreditDebt, method = "spearman")$p.value)
customer %>%
group_by(LoanDefault) %>%
summarize(r = cor(HHIncome, CreditDebt, method = "spearman"),
p_value = cor.test(HHIncome, CreditDebt, method = "spearman")$p.value)
customer %>%
group_by(Region) %>%
summarize(r = cor(HHIncome, CreditDebt, method = "spearman"),
p_value = cor.test(HHIncome, CreditDebt, method = "spearman")$p.value)
?learningAnalytics::get_tutorial
devtools::check()
devtools::check()
